/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_MonarchHeader_2eproto__INCLUDED
#define PROTOBUF_C_MonarchHeader_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _MonarchPB__MonarchHeader MonarchPB__MonarchHeader;


/* --- enums --- */

typedef enum _MonarchPB__MonarchHeader__RunSource {
  MONARCH_PB__MONARCH_HEADER__RUN_SOURCE__Mantis = 0,
  MONARCH_PB__MONARCH_HEADER__RUN_SOURCE__Simulation = 1
} MonarchPB__MonarchHeader__RunSource;
typedef enum _MonarchPB__MonarchHeader__RunType {
  MONARCH_PB__MONARCH_HEADER__RUN_TYPE__Background = 0,
  MONARCH_PB__MONARCH_HEADER__RUN_TYPE__Signal = 1
} MonarchPB__MonarchHeader__RunType;

/* --- messages --- */

struct  _MonarchPB__MonarchHeader
{
  ProtobufCMessage base;
  char *filename;
  double acqrate;
  uint32_t acqmode;
  uint32_t acqtime;
  uint32_t recsize;
  char *rundate;
  char *runinfo;
  protobuf_c_boolean has_runsource;
  MonarchPB__MonarchHeader__RunSource runsource;
  protobuf_c_boolean has_runtype;
  MonarchPB__MonarchHeader__RunType runtype;
};
extern char monarch_pb__monarch_header__run_date__default_value[];
extern char monarch_pb__monarch_header__run_info__default_value[];
#define MONARCH_PB__MONARCH_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&monarch_pb__monarch_header__descriptor) \
    , NULL, 0, 0, 0, 0, monarch_pb__monarch_header__run_date__default_value, monarch_pb__monarch_header__run_info__default_value, 0,0, 0,0 }


/* MonarchPB__MonarchHeader methods */
void   monarch_pb__monarch_header__init
                     (MonarchPB__MonarchHeader         *message);
size_t monarch_pb__monarch_header__get_packed_size
                     (const MonarchPB__MonarchHeader   *message);
size_t monarch_pb__monarch_header__pack
                     (const MonarchPB__MonarchHeader   *message,
                      uint8_t             *out);
size_t monarch_pb__monarch_header__pack_to_buffer
                     (const MonarchPB__MonarchHeader   *message,
                      ProtobufCBuffer     *buffer);
MonarchPB__MonarchHeader *
       monarch_pb__monarch_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   monarch_pb__monarch_header__free_unpacked
                     (MonarchPB__MonarchHeader *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MonarchPB__MonarchHeader_Closure)
                 (const MonarchPB__MonarchHeader *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor monarch_pb__monarch_header__descriptor;
extern const ProtobufCEnumDescriptor    monarch_pb__monarch_header__run_source__descriptor;
extern const ProtobufCEnumDescriptor    monarch_pb__monarch_header__run_type__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_MonarchHeader_2eproto__INCLUDED */
